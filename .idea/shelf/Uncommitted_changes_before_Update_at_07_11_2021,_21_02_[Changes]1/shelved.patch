Index: MainTrain.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\n#include <iostream>\r\n#include \"anomaly_detection_util.h\"\r\n#include \"SimpleAnomalyDetector.h\"\r\n#include \"timeseries.h\"\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\nbool wrong(float val, float expected){\r\n    cout << expected << \" Your input: \" << val << endl;\r\n    return val<expected-0.001 || val>expected+0.001;\r\n}\r\n\r\n// this is a simple test to put you on the right track\r\nint main(){\r\n\r\n    TimeSeries* check = new TimeSeries(\"/home/kehat/CLionProjects/Anomaly-detection/data.csv\");\r\n\r\n   vector<Feature> vec = check->getData2();\r\n\r\n   vector<float> values = vec[1].getValues();\r\n\r\n   cout << values[0] << endl;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\tconst int N=10;\r\n\tfloat x[]={1,2,3,4,5,6,7,8,9,10};\r\n\tfloat y[]={2.1,4.2,6.1,8.1,10.3,12.2,14.4,16.1,18.2,20.3};\r\n\r\n\tPoint* ps[N];\r\n\tfor(int i=0;i<N;i++)\r\n\t\tps[i]=new Point(x[i],y[i]);\r\n\r\n\tLine l=linear_reg(ps,N);\r\n\tPoint p(4,8);\r\n\r\n\tfloat v[]={var(x,N),cov(x,y,N),pearson(x,y,N),l.a,l.b,l.f(4),dev(p,l)};\r\n\tfloat e[]={8.25,16.63,0.999,2.015,0.113,8.176,0.176};\r\n\r\n\r\n\tfor(int i=0;i<7;i++)\r\n\t\tif(wrong(v[i],e[i]))\r\n\t\t\tcout<<\"error for check \"<<i<<\" (-14)\"<<endl;\r\n\r\n\r\n\tfor(int i=0;i<N;i++)\r\n\t\tdelete ps[i];\r\n\r\n\tcout<<\"done\"<<endl;\r\n\treturn 0;*/\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/MainTrain.cpp b/MainTrain.cpp
--- a/MainTrain.cpp	
+++ b/MainTrain.cpp	
@@ -15,7 +15,7 @@
 // this is a simple test to put you on the right track
 int main(){
 
-    TimeSeries* check = new TimeSeries("/home/kehat/CLionProjects/Anomaly-detection/data.csv");
+    TimeSeries* check = new TimeSeries("/home/avi/Desktop/Anomaly-detection/data.csv");
 
    vector<Feature> vec = check->getData2();
 
